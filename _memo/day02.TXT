데이터 타입과 변수
	1. 자바스크립트 식별자(이름)
		식별자(identifier)란 자바스크립트 개발자가 변수, 상수, 함수에 붙이는 이름이다.
		식별자를 만들 때 다음 규칙을 준수해야 한다.

		- 첫 번째 문자 : 알파벳, 언더바, $문자만 사용 가능
		- 두 번째 이상 문자 : 알파벳, 언더바, 0-9, $ 사용 가능
		- 대소문자 구분 : data와 dAta는 다른 식별자이다.
		- 키워드(예약어) 사용 불가
		
		6variable		불가
		student_id	가능
		_code		가능
		if		불가
		%calc		불가
		$data		가능

	2. 문장 구분
		세미콜론으로 문장과 문장을 구분한다.
		한 줄에 한 문장만 있는 경우 세미콜론을 생략할 수 있다.

		i = i+1	
		j = j+1;
		k = k+1; m=m+1;
		n=n+i p=p+1 (불가)

	3. 주석
		- 한 줄 주석: //
		- 범위 주석: /* */

	4. 데이터 타입(typeof())
		- 숫자 타입(number) : 42, 3.14, ...
		- 논리 타입(bool) : true, false
		- 문자열 타입 : "안녕", "하세요", "35", 'a', "A", ...
		- 객체 레퍼런스 타입(object) : Object, Array, Math, Date, ...
		- undefined : 타입이 정해지지 않은 것을 의미한다.
		- null : 값이 정해지지 않은 것을 의미한다.

	5. 변수
		- var 키워드로 변수를 선언한다.

		var score;
		var year, month, day;
		var address="남양주";

		- var 키워드 없이 변수를 선언할 수 있다.

		age = 20;

		만약 위에 age가 이미 선언되어 있다면 값 수정
		var를 반드시 붙여서 선언하는 것이 명료하고, 실수를 막을 수 있기 때문에 var 키워드 없이 선언하지 말자!

		※ 대혼란
		var age = 20;
		var age = 10;

		var 키워드를 사용하더라도 같은 이름으로 선언이 가능하고 두 번째 부터는 값만 수정된다.

	6. 지역변수와 전역변수
		변수의 사용 범위(scope)에 따라서 전역변수(global)와 지역변수(local)로 나뉜다.
		var로 선언 시, scope는 반드시 함수의 영역만 판단한다.

		전역변수 : 함수 밖에서 선언되거나 함수 안에서 var 키워드 없이 선언.
		지역변수 : 함수 안에서 var 키워드로 선언. 선언된 함수 내에서만 사용 가능.

	7. 상수
		let	: 수정 가능
		const	: 수정 불가능

================================================================================================

함수
	인자(파라미터, parameter)	: 매개변수(선언부)
	인수(아규먼트, argument)	: 매개변수에 들어가는 값(사용부, 호출부)

함수의 선언
	function 식별자(args1, args2, ...){
		코드 작성
		return리턴값;
	}

	- function : 함수 선언 표시
	- 식별자 : 동사로 작성
	- parameter : 여러 개 있을 때에는 콤마로 분리하고 자료형을 따로 작성하지 않는다. 생략도 가능하다.
	- return: 생략이 가능하다, 리턴타입은 따로 작성하지 않는다.


자바스크립트 전역함수
	- eval()
		문자열 형태로 수식을 전달받아서 수식을 계산한다.
		eval("2*3+4*6")==30;
		
	-parseInt()
		문자열을 정소타입으로 변환한다.
		parseInt("32") ===32;

	-isNaN()
		값이 NaN이면 true
		NaN이 아니면 false
	-isFinite()
		값이 NaN이면 false
		NaN이 아니면 true


================================================================================================

자바스크립트 객체
	객체의 고유한 속성을 프로퍼티(property)라고 부르며, 여러 프로퍼티와 값의 쌍으로 표현된다.
	객체가 호출하는 함수는 메소드라고 부른다.

	account = {name: '한동석', number: '110-111-111111', code: '1234'};
	account.프로퍼티명 or account["프로퍼티명"]

	account.deposit = function(){...};
